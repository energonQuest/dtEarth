/* -*-c++-*- */
/* osgEarth - Dynamic map generation toolkit for OpenSceneGraph
* Copyright 2008-2013 Pelican Mapping
* http://osgearth.org
*
* osgEarth is free software; you can redistribute it and/or modify
* it under the terms of the GNU Lesser General Public License as published by
* the Free Software Foundation; either version 2 of the License, or
* (at your option) any later version.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU Lesser General Public License for more details.
*
* You should have received a copy of the GNU Lesser General Public License
* along with this program.  If not, see <http://www.gnu.org/licenses/>
*/

#ifndef VERTEX_COLLECTION_VISITOR
#define VERTEX_COLLECTION_VISITOR 1

#include <osg/CoordinateSystemNode>
#include <osg/NodeVisitor>

class VertexCollectionVisitor : public osg::NodeVisitor
{
public:

    VertexCollectionVisitor(bool geocentric = false, TraversalMode traversalMode = TRAVERSE_ALL_CHILDREN);
    
    virtual void reset();
    
    osg::Vec3dArray* getVertices() { return _vertices.get(); }
    
    void apply(osg::Node& node);
    
    void apply(osg::Transform& transform);
    
    void apply(osg::Geode& geode);
    
    inline void pushMatrix(osg::Matrix& matrix) { _matrixStack.push_back(matrix); }
    
    inline void popMatrix() { _matrixStack.pop_back(); }

    void applyDrawable(osg::Drawable* drawable);
    
protected:
    
    typedef std::vector<osg::Matrix> MatrixStack;

    osg::ref_ptr<osg::Vec3dArray>  _vertices;
    MatrixStack _matrixStack;
    bool _geocentric;
    osg::ref_ptr<osg::EllipsoidModel> _ellipsoidModel;

    void addVertex(osg::Vec3 vertex);
};

#endif //VERTEX_COLLECTION_VISITOR
