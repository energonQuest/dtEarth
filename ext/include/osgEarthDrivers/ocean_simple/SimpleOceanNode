/* -*-c++-*- */
/* osgEarth - Dynamic map generation toolkit for OpenSceneGraph
 * Copyright 2008-2013 Pelican Mapping
 * http://osgearth.org
 *
 * osgEarth is free software; you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>
 */
#ifndef OSGEARTH_DRIVER_SIMPLE_OCEAN_NODE
#define OSGEARTH_DRIVER_SIMPLE_OCEAN_NODE 1

#include "SimpleOceanOptions"
#include <osgEarthUtil/Ocean>

namespace osgEarth {
    class MapNode;
}
namespace osg {
    class Uniform;
}

namespace osgEarth { namespace Drivers { namespace SimpleOcean
{
    using namespace osgEarth;
    using namespace osgEarth::Util;

    /**
     * Node tha renders an ocean surface over a MapNode.
     */
    class SimpleOceanNode : public OceanNode
    {
    public:
        /**
         * Constructs a new ocean surface node. Add this to your scene graph somewhere
         * alongside your MapNode.
         */
        SimpleOceanNode(
            const SimpleOceanOptions& options,
            MapNode*                  mapNode);

    protected: // OceanNode

        void onSetSeaLevel();

        virtual ~SimpleOceanNode() { }

    private:

        osg::observer_ptr<MapNode> _parentMapNode;
        SimpleOceanOptions         _options;
        osg::ref_ptr<osg::Uniform> _seaLevel, _lowFeather, _highFeather;
        osg::ref_ptr<osg::Uniform> _maxRange, _fadeRange;
        osg::ref_ptr<osg::Uniform> _baseColor;

        void rebuild();

        void applyOptions();
    };

} } } // namespace osgEarth::Drivers::SimpleOcean

#endif // OSGEARTH_DRIVER_SIMPLE_OCEAN_NODE
